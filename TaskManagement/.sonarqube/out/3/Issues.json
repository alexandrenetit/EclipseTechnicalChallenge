{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.13.0.0",
        "fileVersion": "4.13.0-3.25112.7 (afe5bc4a)",
        "semanticVersion": "4.13.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'ToResponse' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Labs/EclipseTechnicalChallenge/TaskManagement/src/TaskManagement.Application/Mappers/WorkItemMapper.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 36,
                  "endLine": 8,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Labs/EclipseTechnicalChallenge/TaskManagement/src/TaskManagement.Application/Mappers/WorkItemMapper.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 35,
                  "endLine": 44,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'Work item not found' 4 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Labs/EclipseTechnicalChallenge/TaskManagement/src/TaskManagement.Application/Services/WorkItemService.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 44,
                  "endLine": 71,
                  "endColumn": 65
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Labs/EclipseTechnicalChallenge/TaskManagement/src/TaskManagement.Application/Services/WorkItemService.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 44,
                  "endLine": 88,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Labs/EclipseTechnicalChallenge/TaskManagement/src/TaskManagement.Application/Services/WorkItemService.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 44,
                  "endLine": 117,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Labs/EclipseTechnicalChallenge/TaskManagement/src/TaskManagement.Application/Services/WorkItemService.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 44,
                  "endLine": 134,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null
            }
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'UserId can't be empty' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Labs/EclipseTechnicalChallenge/TaskManagement/src/TaskManagement.Application/Services/ReportService.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 19,
                  "endLine": 21,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2208",
          "level": "note",
          "message": "Method GeneratePerformanceReportAsync passes 'UserId can't be empty' as the paramName argument to a ArgumentNullException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Labs/EclipseTechnicalChallenge/TaskManagement/src/TaskManagement.Application/Services/ReportService.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 19,
                  "endLine": 21,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA2208": {
          "id": "CA2208",
          "shortDescription": "Instantiate argument exceptions correctly",
          "fullDescription": "A call is made to the default (parameterless) constructor of an exception type that is or derives from ArgumentException, or an incorrect string argument is passed to a parameterized constructor of an exception type that is or derives from ArgumentException.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2208",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "S1192": {
          "id": "S1192",
          "shortDescription": "String literals should not be duplicated",
          "fullDescription": "Duplicated string literals make the process of refactoring complex and error-prone, as any change would need to be propagated on all occurrences.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1192",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3928": {
          "id": "S3928",
          "shortDescription": "Parameter names used into ArgumentException constructors should match an existing one ",
          "fullDescription": "Some constructors of the ArgumentException, ArgumentNullException, ArgumentOutOfRangeException and DuplicateWaitObjectException classes must be fed with a valid parameter name. This rule raises an issue in two cases:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3928",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4136": {
          "id": "S4136",
          "shortDescription": "Method overloads should be grouped together",
          "fullDescription": "For clarity, all overloads of the same method should be grouped together. That lets both users and maintainers quickly understand all the current available options.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4136",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}